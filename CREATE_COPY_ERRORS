-- Create a database from the share.
create database snowflake_sample_data from share sfc_samples.sample_data;

-- Grant the PUBLIC role access to the database.
-- Optionally change the role name to restrict access to a subset of users.
grant imported privileges on database snowflake_sample_data to role public;


create warehouse first_warehouse
    WITH
        WAREHOUSE_TYPE = 'STANDARD'
        WAREHOUSE_SIZE = 'XSMALL'
        MAX_CLUSTER_COUNT = 3
        SCALING_POLICY = 'STANDARD'
        AUTO_SUSPEND = 300
        AUTO_RESUME = TRUE
        COMMENT = 'FIRST WAREHOUSE';


-- CREATING A STAGE FOR EXERCISE_DB
create or replace stage exercise_stage
url = 's3://snowflake-assignments-mc/loadingdata/'
;


LIST @exercise_stage;


COPY INTO CUSTOMERS
    FROM @exercise_stage
    FILE_FORMAT = (TYPE = CSV FIELD_DELIMITER = ';' SKIP_HEADER = 1)
    pattern = '.*customer.*';

select * from customers limit 100;

create stage file_format
url = 's3://snowflake-assignments-mc/fileformat/';

create file format csv_pipe
type = CSV
FIELD_DELIMITER = '|'
SKIP_HEADER = 1;

LIST @file_format;

COPY INTO CUSTOMERS
    FROM @file_format
    file_format = csv_pipe;
 --------------------------------------
 --Workout on COPY OPTIONS ----
 --------------------------------------

 CREATE TABLE EMPLOYEES (
    customer_id int,
    first_name varchar(50),
    last_name varchar(50),
    email varchar(50),
    age int,
    department varchar(50)
    );

CREATE STAGE COPY_OPTION_PRACTICE
URL = 's3://snowflake-assignments-mc/copyoptions/example1';

CREATE FILE FORMAT COPY_OPTIONS
TYPE = CSV
FIELD_DELIMITER=','
SKIP_HEADER=1;

DESC FILE FORMAT COPY_OPTIONS;
ALTER FILE FORMAT COPY_OPTIONS RENAME TO COPY_OPTIONS_FF ;

--*****FIND ERRORS IF THIS COPY WAS TO BE PERFORMED
COPY INTO EMPLOYEES
    FROM @COPY_OPTION_PRACTICE
    FILE_FORMAT = COPY_OPTIONS_FF
    VALIDATION_MODE = RETURN_ERRORS; 
--AFTER VALIDATING CARRY ON WITH ACCOUNTABILITY
COPY INTO EMPLOYEES
    FROM @COPY_OPTION_PRACTICE
    FILE_FORMAT = COPY_OPTIONS_FF
    ON_ERROR = CONTINUE; 

---

   
---- Use files with errors ----
CREATE OR REPLACE STAGE COPY_DB.PUBLIC.aws_stage_copy
    url='s3://snowflakebucket-copyoption/returnfailed/';

LIST @COPY_DB.PUBLIC.aws_stage_copy;    



COPY INTO COPY_DB.PUBLIC.ORDERS
    FROM @aws_stage_copy
    file_format= (type = csv field_delimiter=',' skip_header=1)
    pattern='.*Order.*'
    VALIDATION_MODE = RETURN_ERRORS;



COPY INTO COPY_DB.PUBLIC.ORDERS
    FROM @aws_stage_copy
    file_format= (type = csv field_delimiter=',' skip_header=1)
    pattern='.*Order.*'
    VALIDATION_MODE = RETURN_1_rows;
    



-------------- Working with error results -----------

---- 1) Saving rejected files after VALIDATION_MODE ---- 

CREATE OR REPLACE TABLE  COPY_DB.PUBLIC.ORDERS (
    ORDER_ID VARCHAR(30),
    AMOUNT VARCHAR(30),
    PROFIT INT,
    QUANTITY INT,
    CATEGORY VARCHAR(30),
    SUBCATEGORY VARCHAR(30));


COPY INTO COPY_DB.PUBLIC.ORDERS
    FROM @aws_stage_copy
    file_format= (type = csv field_delimiter=',' skip_header=1)
    pattern='.*Order.*'
    VALIDATION_MODE = RETURN_ERRORS;


// Storing rejected /failed results in a table
CREATE OR REPLACE TABLE rejected AS 
select rejected_record from table(result_scan(last_query_id()));



-- Adding additional records --
INSERT INTO rejected
select rejected_record from table(result_scan(last_query_id()));

SELECT * FROM rejected;




---- 2) Saving rejected files without VALIDATION_MODE ---- 





COPY INTO COPY_DB.PUBLIC.ORDERS
    FROM @aws_stage_copy
    file_format= (type = csv field_delimiter=',' skip_header=1)
    pattern='.*Order.*'
    ON_ERROR=CONTINUE;
  
  
select * from table(validate(orders, job_id => '_last'));


---- 3) Working with rejected records ---- 



SELECT REJECTED_RECORD FROM rejected;

CREATE OR REPLACE TABLE rejected_values as
SELECT 
SPLIT_PART(rejected_record,',',1) as ORDER_ID, 
SPLIT_PART(rejected_record,',',2) as AMOUNT, 
SPLIT_PART(rejected_record,',',3) as PROFIT, 
SPLIT_PART(rejected_record,',',4) as QUATNTITY, 
SPLIT_PART(rejected_record,',',5) as CATEGORY, 
SPLIT_PART(rejected_record,',',6) as SUBCATEGORY
FROM rejected; 


SELECT * FROM rejected_values;




---- SIZE_LIMIT ---- RRRRRRRRRRRRRRRREEEEEEEEEEEESSSSSSSSSSSSSEEEEEEEEEEEETTTTTTTTTTTTTTTTTTTTTT

// Prepare database & table
CREATE OR REPLACE DATABASE COPY_DB;

CREATE OR REPLACE TABLE  COPY_DB.PUBLIC.ORDERS (
    ORDER_ID VARCHAR(30),
    AMOUNT VARCHAR(30),
    PROFIT INT,
    QUANTITY INT,
    CATEGORY VARCHAR(30),
    SUBCATEGORY VARCHAR(30));
    
    
// Prepare stage object
CREATE OR REPLACE STAGE COPY_DB.PUBLIC.aws_stage_copy
    url='s3://snowflakebucket-copyoption/size/';
    
    
// List files in stage
LIST @aws_stage_copy;


//Load data using copy command
COPY INTO COPY_DB.PUBLIC.ORDERS
    FROM @aws_stage_copy
    file_format= (type = csv field_delimiter=',' skip_header=1)
    pattern='.*Order.*'
    SIZE_LIMIT=20000;



